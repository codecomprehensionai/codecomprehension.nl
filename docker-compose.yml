x-base: &base
    build:
        context: .
        args:
            WWW_UID: ${HOST_UID:-1000}
            WWW_GID: ${HOST_GID:-1000}
    user: ${HOST_UID:-1000}:${HOST_GID:-1000}
    ulimits:
        nofile:
            soft: 20000
            hard: 40000
    security_opt:
        - no-new-privileges:true
    networks:
        - stack
    restart: always

services:
    initialize:
        <<: *base
        restart: no
        environment:
            CONTAINER_MODE: worker
            APP_ENV: ${APP_ENV}
            LARAVEL_ENV_ENCRYPTION_KEY: ${LARAVEL_ENV_ENCRYPTION_KEY}
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
            # meilisearch:
            #     condition: service_healthy
        deploy:
            resources:
                reservations:
                    memory: 256M
                    cpus: '0.25'
                limits:
                    memory: 512M
                    cpus: '0.5'
        command:
            - /bin/sh
            - -c
            - |
                echo
                echo "--- Decrypt Environment ---"
                php artisan env:decrypt --force --filename=.env --env=$APP_ENV

                # echo
                # echo "--- Sync Scout Settings ---"
                # php /var/www/html/artisan scout:sync-index-settings

                echo
                echo "--- Run Migrations ---"
                php /var/www/html/artisan migrate --force

                echo
                echo "--- Run Seeders ---"
                php /var/www/html/artisan db:seed --force

    app:
        <<: *base
        environment:
            CONTAINER_MODE: http
            APP_ENV: ${APP_ENV}
            LARAVEL_ENV_ENCRYPTION_KEY: ${LARAVEL_ENV_ENCRYPTION_KEY}
        depends_on:
            initialize:
                condition: service_completed_successfully
        deploy:
            resources:
                reservations:
                    memory: 1G
                    cpus: '0.5'
                limits:
                    memory: 2G
                    cpus: '1.0'

    scheduler:
        <<: *base
        environment:
            CONTAINER_MODE: scheduler
            APP_ENV: ${APP_ENV}
            LARAVEL_ENV_ENCRYPTION_KEY: ${LARAVEL_ENV_ENCRYPTION_KEY}
        depends_on:
            initialize:
                condition: service_completed_successfully
        deploy:
            resources:
                reservations:
                    memory: 1G
                    cpus: '0.5'
                limits:
                    memory: 2G
                    cpus: '1.0'

    horizon:
        <<: *base
        environment:
            CONTAINER_MODE: horizon
            APP_ENV: ${APP_ENV}
            LARAVEL_ENV_ENCRYPTION_KEY: ${LARAVEL_ENV_ENCRYPTION_KEY}
        depends_on:
            initialize:
                condition: service_completed_successfully
        deploy:
            resources:
                reservations:
                    memory: 1G
                    cpus: '0.5'
                limits:
                    memory: 2G
                    cpus: '1.0'

    # reverb:
    #     <<: *base
    #     environment:
    #         CONTAINER_MODE: reverb
    #         APP_ENV: ${APP_ENV}
    #         LARAVEL_ENV_ENCRYPTION_KEY: ${LARAVEL_ENV_ENCRYPTION_KEY}
    #     depends_on:
    #         initialize:
    #             condition: service_completed_successfully
    #     deploy:
    #         resources:
    #             reservations:
    #                 memory: 1G
    #                 cpus: '1.0'
    #             limits:
    #                 memory: 4G
    #                 cpus: '2.0'

    mysql:
        image: mysql:8.0
        security_opt:
            - no-new-privileges:true
        networks:
            - stack
        volumes:
            - stack-mysql:/var/lib/mysql
        restart: always
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p${MYSQL_ROOT_PASSWORD}']
            start_period: 30s
            interval: 15s
            timeout: 5s
        deploy:
            resources:
                reservations:
                    memory: 1G
                    cpus: '0.5'
                limits:
                    memory: 2G
                    cpus: '1.0'

    redis:
        image: redis:7-alpine
        security_opt:
            - no-new-privileges:true
        networks:
            - stack
        volumes:
            - stack-redis:/data
        restart: always
        environment:
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        command: >
            redis-server
            --requirepass ${REDIS_PASSWORD}
            --appendonly yes
            --appendfsync everysec
        healthcheck:
            test: redis-cli --raw incr ping
            start_period: 30s
            interval: 15s
            timeout: 5s
        deploy:
            resources:
                reservations:
                    memory: 1G
                    cpus: '0.5'
                limits:
                    memory: 2G
                    cpus: '1.0'

    # meilisearch:
    #     image: getmeili/meilisearch:v1.9
    #     security_opt:
    #         - no-new-privileges:true
    #     networks:
    #         - stack
    #     volumes:
    #         - stack-meilisearch:/meili_data
    #     restart: always
    #     environment:
    #         MEILI_ENV: ${MEILISEARCH_ENV}
    #         MEILI_MASTER_KEY: ${MEILISEARCH_KEY}
    #         MEILI_HTTP_ADDR: 0.0.0.0:7700
    #     healthcheck:
    #         test: curl -fsS http://localhost:7700/health
    #         start_period: 30s
    #         interval: 15s
    #         timeout: 5s
    #     deploy:
    #         resources:
    #             reservations:
    #                 memory: 512M
    #                 cpus: '0.5'
    #             limits:
    #                 memory: 1G
    #                 cpus: '1.0'

    # cloudflared:
    #     image: cloudflare/cloudflared
    #     security_opt:
    #         - no-new-privileges:true
    #     networks:
    #         - stack
    #     restart: always
    #     environment:
    #         TUNNEL_TOKEN: ${CLOUDFLARED_TOKEN}
    #     depends_on:
    #         mysql:
    #             condition: service_healthy
    #         redis:
    #             condition: service_healthy
    #         meilisearch:
    #             condition: service_healthy
    #     healthcheck:
    #         test: cloudflared version
    #         start_period: 10s
    #         interval: 15s
    #         timeout: 5s
    #     deploy:
    #         resources:
    #             reservations:
    #                 memory: 128M
    #                 cpus: '0.125'
    #             limits:
    #                 memory: 256M
    #                 cpus: '0.25'
    #     command: tunnel --protocol http2 run

networks:
    stack:
        driver: bridge

volumes:
    stack-mysql:
        driver: local
    stack-redis:
        driver: local
    # stack-meilisearch:
    #     driver: local
